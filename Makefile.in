
MMC = mmc

MFLAGS_COMMON = \
--make                                                       \
--output-compile-error-lines  500                            \
--max-error-line-width        120                            \
--search-directory            @lib_mc4ap@/lib/mercury/ints/  \
--mercury-library-directory   @lib_mc4ap@/lib/mercury/

MFLAGS_JAVA_GRADE = \
--java-classpath @lib_mc4ap@/lib/mercury/lib/java/ui_swing.jar  \
--mercury-library ui_swing

MFLAGS_OTHER_GRADES = \
--mercury-library ui_console

PREFIX = @prefix@

MERSENNE_TWISTER = @mersenne_twister@

PACKAGE = libmercury_utils

################################################################################
# STANDARD TARGETS

all: build

install: install-C install-java

install-html:
install-dvi:
install-pdf:
install-ps:

uninstall:

install-strip: install

clean:
	rm -fr Mercury
	rm -f *.err *~ *.mh

distclean: clean
	rm -fr ./autom4te.cache/
	rm -f ./config.log ./config.status
	rm -f ./configure ./Makefile
	rm -f ./mersenneTwister.m
	rm -f ./mercury_utils.jar

mostlyclean: clean

maintainer-clean: clean
	@echo 'This command is intended for maintainers to use; it'
	@echo 'deletes files that may need special tools to rebuild.'
	rm -f ./mersenneTwister.m

TAGS:

# documentation targets

info:

dvi:
html:
pdf:
ps:

dist:

check:

################################################################################
# OTHER TARGETS


help:
	@echo "Makefile for creating the mercury utils library in C and Java.  Options are"
	@echo "  PREFIX=directory   directory where the library is installed, by default is $(PREFIX)"
	@echo
	@echo "  MERSENNE_TWISTER=int       use the pseudo-random number generator mersenne twister"
	@echo "  MERSENNE_TWISTER=integer   with the given library"
	@echo
	@echo "  help               show this help"
	@echo
	@echo "  install            install the library"
	@echo
	@echo "  clean              remove compilation files"            

build:
ifeq (@mersenne_twister@, int)
	if test ! -f mersenneTwister.m ; then ln -s ./mersenneTwister-int.m mersenneTwister.m     ; fi
endif
ifeq (@mersenne_twister@, integer)
	if test ! -f mersenneTwister.m ; then ln -s ./mersenneTwister-integer.m mersenneTwister.m ; fi
endif
	$(MAKE) build-C
	$(MAKE) build-java

build-C:
	$(MMC) $(MFLAGS_COMMON) $(MFLAGS_OTHER_GRADES) $(PACKAGE)

install-C:
	$(MMC) $(MFLAGS_COMMON) --install-prefix $(PREFIX) $(PACKAGE).install

build-java:
	$(MMC) $(MFLAGS_COMMON) $(MFLAGS_JAVA_GRADE) --grade java --no-libgrade --libgrade java $(PACKAGE)

install-java:
	$(MMC) $(MFLAGS_COMMON) $(MFLAGS_JAVA_GRADE) --grade java --install-prefix $(PREFIX) --no-libgrade --libgrade java $(PACKAGE).install
